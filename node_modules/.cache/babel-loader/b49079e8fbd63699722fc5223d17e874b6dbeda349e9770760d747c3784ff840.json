{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyles\\\\OneDrive\\\\Desktop\\\\VS Code\\\\simon_updated11.06.23\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport './MediaQuery.css';\nimport { useState, useEffect, useRef } from 'react';\nimport Header from './header.js';\nimport Controls from './controls.js';\nimport Gameboard from './gameboard.js';\n//dataset\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet tiles = [{\n  id: 1,\n  color: 'red',\n  alternate: 'maroon',\n  sound: null\n}, {\n  id: 2,\n  color: 'green',\n  alternate: '#029356',\n  sound: null\n}, {\n  id: 3,\n  color: 'blue',\n  alternate: '#0073e6',\n  sound: null\n}, {\n  id: 4,\n  color: 'yellow',\n  alternate: '#606ff3',\n  sound: null\n}];\nfunction Level({\n  level\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"level\",\n      children: level\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n//Customized functions\n_c = Level;\nfunction autoTextFn(text, heading, bool) {\n  text = text.split``;\n  var i = 0,\n    arr = [];\n  let len = [...text].length;\n  let timer = setInterval(() => {\n    let take = text.shift(text[i]);\n    i++;\n    arr.push(take);\n    heading.textContent = arr.join``;\n    // console.log(text)//sender\n    // console.log(arr)//receiver\n    // console.log(arr.length,len)//compare arr's length w/ original text length\n    if (arr.length === len || bool == false) clearInterval(timer); //clearInterval once both lengths are the same.\n  }, 35);\n}\nfunction App() {\n  _s();\n  //HTML References\n  const tilesRef = useRef();\n  const resetRef = useRef();\n  const controlRef = useRef();\n  const myTileRef = useRef();\n  const headingRef = useRef();\n  const subRef = useRef();\n  const playRef = useRef();\n  let start_count = 750;\n\n  //states\n  const [level, setLevel] = useState(0);\n  const [disabled, setDisabled] = useState(false);\n  const [color, setColor] = useState(tiles.map((_, i) => _.color));\n  const [gameStarted, setGameStarted] = useState(false);\n  const [comp, setComp] = useState([]);\n  const [comp_speed, setComp_speed] = useState(start_count);\n  const [comp_tile_delay, setComp_tile_delay] = useState(comp_speed / 2);\n  const [index, setIndex] = useState(0);\n  //useEffects\n\n  useEffect(() => {\n    //Modify computer_speed\n    if (level > 0 && level % 3 == 0) {\n      //computer_speed increases my 150ms every 4 rounds.\n      //computer's tap delay = If level < 9 return (computer speed / 2), else 225 (minimum delay speed)\n      setComp_speed(count => count - 150);\n      setComp_tile_delay(delay => level < 9 ? delay - 75 : 225);\n    } else {\n      setComp_speed(comp_speed);\n    }\n  }, [level]);\n  useEffect(() => {\n    if (gameStarted) {\n      //Once the game starts, the tiles look darker.\n      subRef.current.textContent = '';\n      tilesRef.current.classList.remove('deactivated-ready');\n      tilesRef.current.classList.add('deactivated-ready');\n    } else {\n      setComp([...comp, randomColor()]);\n      autoTextFn('Simon Says', headingRef.current, true);\n      autoTextFn('Try to beat all 20 rounds!', subRef.current, true);\n      tilesRef.current.classList.remove('deactivated-ready');\n      tilesRef.current.classList.add('deactivated-default');\n    }\n  }, [gameStarted]);\n  useEffect(() => {\n    if (!disabled) {\n      tilesRef.current.classList.remove('no-pointer');\n    } else {\n      tilesRef.current.classList.add('no-pointer');\n    }\n  }, [disabled, level]);\n\n  //____________________________________________\n  //action creators\n  const startGame = e => {\n    gameInitialized(e);\n    playRound();\n  };\n  autoTextFn(' ', subRef.current, false);\n  const gameInitialized = e => {\n    subRef.current.textContent = '';\n    setGameStarted(true);\n    setDisabled(true);\n    let play = e.target;\n    let controlWrapper = controlRef.current;\n    play.classList.add('disabled');\n    controlWrapper.classList.remove('space-evenly');\n    controlWrapper.classList.add('centered');\n  };\n  const playRound = () => {\n    autoTextFn('Wait for Computer', subRef.current, true);\n    setComp([...comp, randomColor()]);\n    setLevel(level + 1);\n    activate(comp);\n    humanTurn(level);\n  };\n  const humanTurn = level => {\n    setTimeout(() => {\n      setDisabled(false);\n      autoTextFn('Your turn', subRef.current, true);\n    }, level > 1 ? level + 2 * 1000 + 1500 : level + 2 * 1000);\n  };\n  const activate = array => {\n    array.forEach((tile, i) => {\n      setTimeout(() => {\n        blink(tile, i);\n      }, (i + 1) * comp_speed);\n    });\n  };\n  const blink = col => {\n    let elem = document.querySelector(`#${col}`);\n    elem.classList.remove('deactivated-ready');\n    elem.classList.remove('deactivated-default');\n    setTimeout(() => {\n      elem.classList.add('deactivated-ready');\n      elem.classList.add('deactivated-default');\n      elem.classList.toggle('deactivated-ready');\n    }, comp_tile_delay);\n  };\n  const randomColor = () => {\n    let random = color[Math.floor(Math.random() * color.length)];\n    return random;\n  };\n\n  //_____________________________________________\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      headingRef,\n      subRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Gameboard, {\n      comp_tile_delay,\n      tiles,\n      start_count,\n      comp_speed,\n      setComp_speed,\n      setComp_tile_delay,\n      tilesRef,\n      myTileRef,\n      comp,\n      setComp,\n      index,\n      setIndex,\n      level,\n      playRound,\n      level,\n      subRef,\n      autoTextFn,\n      setGameStarted,\n      setLevel,\n      playRef,\n      controlRef,\n      setDisabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      startGame,\n      resetRef,\n      controlRef,\n      playRef,\n      subRef,\n      autoTextFn,\n      level,\n      setDisabled,\n      setGameStarted,\n      setComp,\n      setComp_tile_delay,\n      setLevel,\n      comp_speed,\n      start_count,\n      setComp_speed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Level, {\n      level\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8esLnEpk2UF/IgI+B9vXUJvY8+g=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Level\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","Header","Controls","Gameboard","jsxDEV","_jsxDEV","tiles","id","color","alternate","sound","Level","level","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","autoTextFn","text","heading","bool","split","i","arr","len","length","timer","setInterval","take","shift","push","textContent","join","clearInterval","App","_s","tilesRef","resetRef","controlRef","myTileRef","headingRef","subRef","playRef","start_count","setLevel","disabled","setDisabled","setColor","map","_","gameStarted","setGameStarted","comp","setComp","comp_speed","setComp_speed","comp_tile_delay","setComp_tile_delay","index","setIndex","count","delay","current","classList","remove","add","randomColor","startGame","e","gameInitialized","playRound","play","target","controlWrapper","activate","humanTurn","setTimeout","array","forEach","tile","blink","col","elem","document","querySelector","toggle","random","Math","floor","_c2","$RefreshReg$"],"sources":["C:/Users/Kyles/OneDrive/Desktop/VS Code/simon_updated11.06.23/src/App.js"],"sourcesContent":["import './App.css';\nimport './MediaQuery.css';\nimport { useState, useEffect, useRef } from 'react';\nimport Header from './header.js'\nimport Controls from './controls.js';\nimport Gameboard from './gameboard.js'\n//dataset\nlet tiles = [{\n  id: 1,\n  color: 'red',\n  alternate: 'maroon',\n  sound: null\n},\n{\n  id: 2,\n  color: 'green',\n  alternate: '#029356',\n  sound: null\n},\n{\n  id: 3,\n  color: 'blue',\n  alternate: '#0073e6',\n  sound: null\n},\n{\n  id: 4,\n  color: 'yellow',\n  alternate: '#606ff3',\n  sound: null\n}]\nfunction Level({ level }) {\n  return (\n    <div>\n      <h2 className=\"level\">{level}</h2>\n    </div>\n  )\n}\n  //Customized functions\n  function autoTextFn(text, heading,bool) {\n    text = text.split``\n    var i = 0, arr = []\n    let len = [...text].length\n    let timer = setInterval(() => {\n      let take = text.shift(text[i])\n      i++\n      arr.push(take)\n      heading.textContent = arr.join``\n      // console.log(text)//sender\n      // console.log(arr)//receiver\n      // console.log(arr.length,len)//compare arr's length w/ original text length\n      if (arr.length === len||bool==false) clearInterval(timer)//clearInterval once both lengths are the same.\n    }, 35)\n  }\n\nfunction App() {\n  //HTML References\n  const tilesRef = useRef()\n  const resetRef = useRef()\n  const controlRef = useRef()\n  const myTileRef = useRef()\n  const headingRef = useRef()\n  const subRef = useRef()\n  const playRef = useRef()\n  let start_count = 750\n\n  //states\n  const [level, setLevel] = useState(0)\n  const [disabled, setDisabled] = useState(false)\n  const [color, setColor] = useState(tiles.map((_,i)=>_.color))\n  const [gameStarted, setGameStarted] = useState(false)\n  const [comp, setComp] = useState([])\n  const [comp_speed, setComp_speed] = useState(start_count)\n  const [comp_tile_delay, setComp_tile_delay] = useState(comp_speed/2)\n  const [index, setIndex] = useState(0)\n  //useEffects\n  \n  useEffect(()=>{//Modify computer_speed\n    if(level>0&&level%3==0){\n      //computer_speed increases my 150ms every 4 rounds.\n      //computer's tap delay = If level < 9 return (computer speed / 2), else 225 (minimum delay speed)\n      setComp_speed(count => count - 150)\n      setComp_tile_delay(delay => level < 9 ? delay - 75 : 225)\n    }\n    else{\n      setComp_speed(comp_speed)\n    }\n  },[level])\n  useEffect(()=>{ \n  if(gameStarted){//Once the game starts, the tiles look darker.\n    subRef.current.textContent = ''\n    tilesRef.current.classList.remove('deactivated-ready')\n    tilesRef.current.classList.add('deactivated-ready')\n    }\n    else{\n      setComp([...comp,randomColor()])\n      autoTextFn('Simon Says', headingRef.current,true)\n      autoTextFn('Try to beat all 20 rounds!',subRef.current,true)\n      tilesRef.current.classList.remove('deactivated-ready')\n      tilesRef.current.classList.add('deactivated-default')\n\n    }\n  },[gameStarted])\n  useEffect(() => {\n      if(!disabled){\n        tilesRef.current.classList.remove('no-pointer')\n      }\n      else {\n        tilesRef.current.classList.add('no-pointer')\n      }  \n  }, [disabled,level])\n\n  //____________________________________________\n  //action creators\n  const startGame = (e) => {\n    gameInitialized(e)\n    playRound()\n}\nautoTextFn(' ',subRef.current,false)\n  const gameInitialized = (e) => {\n    subRef.current.textContent = ''\n    setGameStarted(true)\n    setDisabled(true)\n    let play = e.target\n    let controlWrapper = controlRef.current\n    play.classList.add('disabled')\n    controlWrapper.classList.remove('space-evenly')\n    controlWrapper.classList.add('centered')\n  }\n  const playRound = () => {\n    autoTextFn('Wait for Computer',subRef.current,true)\n    setComp([...comp, randomColor()])\n    setLevel(level + 1)\n    activate(comp)\n    humanTurn(level)\n  }\n  const humanTurn = (level) =>{\n    setTimeout(()=>{\n    setDisabled(false)\n    autoTextFn('Your turn',subRef.current,true)\n\n    },level > 1 ? (level+2*1000)+1500 : (level+2*1000))\n  }\n  const activate = (array) =>{\n    array.forEach((tile,i) =>{\n        setTimeout(()=>{\n          blink(tile,i)\n        },(i+1)*comp_speed)\n    })\n  }\n  const blink = (col) =>{\n    let elem = document.querySelector(`#${col}`)\n    elem.classList.remove('deactivated-ready')\n    elem.classList.remove('deactivated-default')\n    setTimeout(()=>{\n      elem.classList.add('deactivated-ready')\n      elem.classList.add('deactivated-default')\n      elem.classList.toggle('deactivated-ready')\n    },comp_tile_delay)\n  } \n  const randomColor = () => {\n   let random =  color[Math.floor(Math.random()*color.length)]\n   return random\n  }\n\n  \n\n\n  //_____________________________________________\n\n  return (\n    <div className=\"App\">\n      <Header {...{ headingRef, subRef }} />\n      <Gameboard {...{ \n        comp_tile_delay,\n        tiles,\n        start_count,\n        comp_speed,\n        setComp_speed,\n        setComp_tile_delay,\n        tilesRef,\n         myTileRef,\n        comp,\n        setComp,\n        index,\n        setIndex,\n        level,\n        playRound,\n        level,\n        subRef,\n        autoTextFn,\n        setGameStarted,\n        setLevel,\n         playRef,\n        controlRef,\n        setDisabled}} />\n      <Controls {...{ \n        startGame, \n        resetRef, \n        controlRef,\n        playRef,\n        subRef,\n        autoTextFn,\n        level,\n        setDisabled,\n        setGameStarted,\n        setComp,\n        setComp_tile_delay,\n        setLevel,\n        comp_speed,\n        start_count,\n        setComp_speed \n        }} />\n      <Level {...{ level }} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}