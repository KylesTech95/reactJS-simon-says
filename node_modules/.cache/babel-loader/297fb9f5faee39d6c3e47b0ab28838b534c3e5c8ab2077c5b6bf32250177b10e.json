{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyles\\\\OneDrive\\\\Desktop\\\\VS Code\\\\simon_updated11.06.23\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport './MediaQuery.css';\nimport { useState, useEffect, useRef } from 'react';\nimport Header from './header.js';\nimport Controls from './controls.js';\nimport Gameboard from './gameboard.js';\nimport Level from './level.js';\n//dataset\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet tiles = [{\n  id: 1,\n  color: 'red',\n  alternate: 'hotpink',\n  sound: './sounds/beep-04.mp3'\n}, {\n  id: 2,\n  color: 'green',\n  alternate: 'lime',\n  sound: './sounds/beep-05.mp3'\n}, {\n  id: 3,\n  color: 'blue',\n  alternate: 'cyan',\n  sound: './sounds/beep-08b.mp3'\n}, {\n  id: 4,\n  color: 'yellow',\n  alternate: 'tan',\n  sound: './sounds/beep-09.mp3'\n}];\n//Customized functions\nfunction autoTextFn(text, heading) {\n  text = [...text]; //text.split``\n  let i = 0,\n    arr = [],\n    len = text.length;\n  let timer = setInterval(() => {\n    let take = text.shift(text[i]);\n    i += 1;\n    arr.push(take);\n    heading.textContent = arr.join``;\n    // console.log(text)//sender\n    // console.log(arr)//receiver\n    // console.log(arr.length,len)//compare arr's length w/ original text length\n    if (arr.length === len) clearInterval(timer); //clearInterval once both lengths are the same.\n  }, 35);\n}\nfunction App() {\n  _s();\n  //HTML References\n  const tilesRef = useRef();\n  const resetRef = useRef();\n  const controlRef = useRef();\n  const myTileRef = useRef();\n  const headingRef = useRef();\n  const subRef = useRef();\n  const playRef = useRef();\n  const backgroundRef = useRef();\n  let bg_count = 0;\n  let start_count = 750;\n\n  //states\n  const [level, setLevel] = useState(0);\n  const [comp, setComp] = useState([]);\n  const [comp_speed, setComp_speed] = useState(start_count);\n  const [comp_tile_delay, setComp_tile_delay] = useState(comp_speed / 2);\n  const [color, setColor] = useState(tiles.map((_, i) => _.color));\n  const [gameStarted, setGameStarted] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n  const [index, setIndex] = useState(0);\n  const [bg, setBg] = useState({\n    background: `var(--black-bg)`,\n    color: `var(--white-color)`\n  });\n  //____________________________________________\n  //useEffects\n  useEffect(() => {\n    if (gameStarted) {\n      //Once the game starts, the tiles look darker.\n      subRef.current.textContent = '';\n      [...tilesRef.current.children].forEach(t => {\n        t.classList.remove('deactivated-default');\n        t.classList.add('deactivated-ready');\n      });\n    } else {\n      [...tilesRef.current.children].forEach(t => {\n        t.classList.remove('deactivated-ready');\n        t.classList.add('deactivated-default');\n      });\n      subRef.current.style = 'color:#fff';\n      setComp([...comp, randomColor()]); //load your colors before the game starts\n      autoTextFn('Try to beat all 15 rounds!', subRef.current);\n    }\n  }, [gameStarted]);\n  useEffect(() => {\n    //Modify computer_speed\n    if (level > 0 && level % 3 === 0) {\n      //computer_speed increases my 150ms every 4 rounds.\n      //computer's tap delay = If level < 9 return (computer speed / 2), else 225 (minimum delay speed)\n      setComp_speed(count => count - 75);\n      setComp_tile_delay(delay => level < 9 ? delay - 37.5 : 225);\n    } else {\n      setComp_speed(comp_speed);\n    }\n  }, [level]);\n  useEffect(() => {\n    if (!disabled) {\n      tilesRef.current.classList.remove('no-pointer');\n    } else {\n      tilesRef.current.classList.add('no-pointer');\n    }\n  }, [disabled]);\n  //____________________________________________\n  //action creators\n  const randomColor = () => {\n    let random = color[Math.floor(Math.random() * color.length)];\n    return random;\n  };\n  const startGame = e => {\n    gameInitialized(e);\n    playRound();\n  };\n  const gameInitialized = e => {\n    subRef.current.textContent = '';\n    setGameStarted(true);\n    setDisabled(true);\n    let play = e.target;\n    let controlWrapper = controlRef.current;\n    play.classList.add('disabled'); //Play button disappears\n    controlWrapper.classList.remove('space-evenly');\n    controlWrapper.classList.add('centered');\n  };\n  const playRound = () => {\n    autoTextFn('Wait for Computer', subRef.current);\n    setComp([...comp, randomColor()]); //Return an additional randomColor() onto the computer's sequence. \n    setLevel(level + 1); //level increments by 1 after passing a level\n    activate(comp); //activate the computer's sequence\n    humanTurn(level);\n  };\n  const humanTurn = level => {\n    setTimeout(() => {\n      setDisabled(false);\n      autoTextFn('Your turn', subRef.current);\n    }, level > 1 ? (level % 8 / comp_speed * 100 + 2) * 1000 + 1500 : (level % 8 / comp_speed * 100 + 2) * 1000);\n  };\n  const activate = array => {\n    array.forEach((tile, i) => {\n      setTimeout(() => {\n        blink(tile, i);\n      }, (i + 1) * comp_speed);\n    });\n  };\n  const blink = col => {\n    let elem = document.getElementById(`${col}`);\n    elem.classList.remove('deactivated-ready');\n    setTimeout(() => {\n      elem.classList.add('deactivated-ready');\n    }, comp_tile_delay);\n  };\n  const climateChange = () => {\n    let btn = backgroundRef.current;\n    bg_count += 1;\n    let body = document.querySelector('body');\n    body.style = `background:${bg.background};color:${bg.color}`;\n    console.log(body);\n    if (bg_count % 2 == 0) {\n      btn.classList.add('slider-night');\n      btn.classList.remove('slider-day');\n      setBg({\n        background: `var(--black-bg)`,\n        color: `var(--white-color)`\n      });\n    } else {\n      btn.classList.add('slider-day');\n      btn.classList.remove('slider-night');\n      setBg({\n        background: `var(--black-bg)`,\n        color: `var(--white-color)`\n      });\n    }\n  };\n\n  //_____________________________________________\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-container\",\n      onClick: climateChange,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle btn-toggle\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"slider\",\n          className: \"slider-night\",\n          ref: backgroundRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      headingRef,\n      subRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Gameboard, {\n      tiles,\n      //tiles Object {}\n\n      comp_speed,\n      //useStates based on speed (int)\n      setComp_speed,\n      comp_tile_delay,\n      setComp_tile_delay,\n      start_count,\n      setDisabled,\n      //useStates based on booleans\n      setGameStarted,\n      activate,\n      //activate function() is passed to mimic the blinking effect after clicking on a tile\n      playRound,\n      autoTextFn,\n      tilesRef,\n      //useRef()\n      myTileRef,\n      subRef,\n      playRef,\n      controlRef,\n      comp,\n      //useStates based on computer's sequence (array), index (int) & level (int)\n      setComp,\n      index,\n      setIndex,\n      level,\n      setLevel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      resetRef,\n      //useRef()\n      controlRef,\n      playRef,\n      subRef,\n      randomColor,\n      //functions passed from parent (App.js)\n      startGame,\n      autoTextFn,\n      comp,\n      //useStates based on computer's sequence (array), gameStarted (bool), disabled (bool) & level (int)\n      setComp,\n      setGameStarted,\n      disabled,\n      setDisabled,\n      level,\n      setLevel,\n      comp_speed,\n      //useStates based on speed (int)\n      setComp_speed,\n      setComp_tile_delay,\n      start_count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Level, {\n      level\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TgntDqGyL0l5e5kXbDHsEgrdto0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","Header","Controls","Gameboard","Level","jsxDEV","_jsxDEV","tiles","id","color","alternate","sound","autoTextFn","text","heading","i","arr","len","length","timer","setInterval","take","shift","push","textContent","join","clearInterval","App","_s","tilesRef","resetRef","controlRef","myTileRef","headingRef","subRef","playRef","backgroundRef","bg_count","start_count","level","setLevel","comp","setComp","comp_speed","setComp_speed","comp_tile_delay","setComp_tile_delay","setColor","map","_","gameStarted","setGameStarted","disabled","setDisabled","index","setIndex","bg","setBg","background","current","children","forEach","t","classList","remove","add","style","randomColor","count","delay","random","Math","floor","startGame","e","gameInitialized","playRound","play","target","controlWrapper","activate","humanTurn","setTimeout","array","tile","blink","col","elem","document","getElementById","climateChange","btn","body","querySelector","console","log","className","onClick","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kyles/OneDrive/Desktop/VS Code/simon_updated11.06.23/src/App.js"],"sourcesContent":["import './App.css';\nimport './MediaQuery.css';\nimport { useState, useEffect, useRef } from 'react';\nimport Header from './header.js'\nimport Controls from './controls.js';\nimport Gameboard from './gameboard.js';\nimport Level from './level.js'\n//dataset\nlet tiles = [{\n  id: 1,\n  color: 'red',\n  alternate: 'hotpink',\n  sound: './sounds/beep-04.mp3'\n},\n{\n  id: 2,\n  color: 'green',\n  alternate: 'lime',\n  sound: './sounds/beep-05.mp3'\n},\n{\n  id: 3,\n  color: 'blue',\n  alternate: 'cyan',\n  sound: './sounds/beep-08b.mp3'\n},\n{\n  id: 4,\n  color: 'yellow',\n  alternate: 'tan',\n  sound: './sounds/beep-09.mp3'\n}]\n//Customized functions\nfunction autoTextFn(text, heading) {\n  text = [...text]//text.split``\n  let i = 0, arr = [], len = text.length\n  let timer = setInterval(() => {\n    let take = text.shift(text[i])\n    i += 1\n    arr.push(take)\n    heading.textContent = arr.join``\n    // console.log(text)//sender\n    // console.log(arr)//receiver\n    // console.log(arr.length,len)//compare arr's length w/ original text length\n    if (arr.length === len) clearInterval(timer)//clearInterval once both lengths are the same.\n  }, 35)\n}\nfunction App() {\n  //HTML References\n  const tilesRef = useRef()\n  const resetRef = useRef()\n  const controlRef = useRef()\n  const myTileRef = useRef()\n  const headingRef = useRef()\n  const subRef = useRef()\n  const playRef = useRef()\n  const backgroundRef = useRef()\n  let bg_count = 0;\n  let start_count = 750\n\n  //states\n  const [level, setLevel] = useState(0)\n  const [comp, setComp] = useState([])\n  const [comp_speed, setComp_speed] = useState(start_count)\n  const [comp_tile_delay, setComp_tile_delay] = useState(comp_speed / 2)\n  const [color, setColor] = useState(tiles.map((_, i) => _.color))\n  const [gameStarted, setGameStarted] = useState(false)\n  const [disabled, setDisabled] = useState(false)\n  const [index, setIndex] = useState(0)\n  const [bg, setBg] = useState({background:`var(--black-bg)`,color:`var(--white-color)`})\n  //____________________________________________\n  //useEffects\n  useEffect(() => {\n    if (gameStarted) {//Once the game starts, the tiles look darker.\n      subRef.current.textContent = '';\n      [...tilesRef.current.children].forEach(t=>{\n        t.classList.remove('deactivated-default')\n        t.classList.add('deactivated-ready')\n      })\n    }\n    else {\n      [...tilesRef.current.children].forEach(t=>{\n        t.classList.remove('deactivated-ready')\n        t.classList.add('deactivated-default')\n      })\n      subRef.current.style = 'color:#fff'\n      setComp([...comp, randomColor()])//load your colors before the game starts\n      autoTextFn('Try to beat all 15 rounds!', subRef.current)\n    }\n  }, [gameStarted])\n  useEffect(() => {\n    //Modify computer_speed\n    if ((level > 0) && (level % 3 === 0)) {\n      //computer_speed increases my 150ms every 4 rounds.\n      //computer's tap delay = If level < 9 return (computer speed / 2), else 225 (minimum delay speed)\n      setComp_speed(count => count - 75)\n      setComp_tile_delay(delay => level < 9 ? delay - 37.5 : 225)\n    }\n    else {\n      setComp_speed(comp_speed)\n    }\n  }, [level]) \n  useEffect(() => {\n    if (!disabled) {\n      tilesRef.current.classList.remove('no-pointer')\n    }\n    else {\n      tilesRef.current.classList.add('no-pointer')\n    }\n  }, [disabled])\n  //____________________________________________\n  //action creators\n  const randomColor = () => {\n    let random = color[Math.floor(Math.random() * color.length)]\n    return random\n  }\n  const startGame = (e) => {\n    gameInitialized(e)\n    playRound()\n  }\n  const gameInitialized = (e) => {\n    subRef.current.textContent = ''\n    setGameStarted(true)\n    setDisabled(true)\n    let play = e.target\n    let controlWrapper = controlRef.current\n    play.classList.add('disabled')//Play button disappears\n    controlWrapper.classList.remove('space-evenly')\n    controlWrapper.classList.add('centered')\n  }\n  const playRound = () => {\n    autoTextFn('Wait for Computer', subRef.current)\n    setComp([...comp, randomColor()])//Return an additional randomColor() onto the computer's sequence. \n    setLevel(level + 1)//level increments by 1 after passing a level\n    activate(comp)//activate the computer's sequence\n    humanTurn(level)\n  }\n  const humanTurn = (level) => {\n    setTimeout(() => {\n      setDisabled(false)\n      autoTextFn('Your turn', subRef.current)\n    }, level > 1 ? ((((level % 8) / comp_speed * 100) + 2) * 1000) + 1500 : ((((level % 8) / comp_speed * 100) + 2) * 1000))\n  }\n  const activate = (array) => {\n    array.forEach((tile, i) => {\n      setTimeout(() => {\n        blink(tile, i)\n      }, (i + 1) * comp_speed)\n    })\n  }\n  const blink = (col) => {\n    let elem = document.getElementById(`${col}`)\n    elem.classList.remove('deactivated-ready')\n\n    setTimeout(() => {\n      elem.classList.add('deactivated-ready')\n    }, comp_tile_delay)\n  }\n  const climateChange = () => {\n    let btn = backgroundRef.current\n    bg_count+=1\n    let body = document.querySelector('body')\n    body.style=`background:${bg.background};color:${bg.color}`\n    console.log(body)\n    if(bg_count%2==0){\n      btn.classList.add('slider-night')\n      btn.classList.remove('slider-day')\n      setBg({background:`var(--black-bg)`,color:`var(--white-color)`})\n    }\n    else{\n      btn.classList.add('slider-day')\n      btn.classList.remove('slider-night')\n      setBg({background:`var(--black-bg)`,color:`var(--white-color)`})\n    }\n    \n  }\n\n  //_____________________________________________\n\n  return (\n    <div className=\"App\">\n      <div className=\"toggle-container\" onClick={climateChange}>\n        <div className=\"toggle btn-toggle\">\n          <span id=\"slider\" className=\"slider-night\" ref={backgroundRef}></span>\n        </div>\n      </div>\n      <Header {...{ headingRef, subRef }} />\n      <Gameboard {...{\n        tiles,//tiles Object {}\n\n        comp_speed,//useStates based on speed (int)\n        setComp_speed,\n        comp_tile_delay,\n        setComp_tile_delay,\n        start_count,\n\n        setDisabled,//useStates based on booleans\n        setGameStarted,\n\n        activate,//activate function() is passed to mimic the blinking effect after clicking on a tile\n        playRound,\n        autoTextFn,\n\n        tilesRef,//useRef()\n        myTileRef,\n        subRef,\n        playRef,\n        controlRef,\n\n        comp,//useStates based on computer's sequence (array), index (int) & level (int)\n        setComp,\n        index,\n        setIndex,\n        level,\n        setLevel\n      }} />\n\n      <Controls {...{\n        resetRef,//useRef()\n        controlRef,\n        playRef,\n        subRef,\n\n        randomColor,//functions passed from parent (App.js)\n        startGame,\n        autoTextFn,\n\n        comp,//useStates based on computer's sequence (array), gameStarted (bool), disabled (bool) & level (int)\n        setComp,\n        setGameStarted,\n        disabled,\n        setDisabled,\n        level,\n        setLevel,\n\n        comp_speed,//useStates based on speed (int)\n        setComp_speed,\n        setComp_tile_delay,\n        start_count\n      }} />\n      <Level {...{ level }} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAO,kBAAkB;AACzB,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,QAAQ,MAAM,eAAe;AACpC,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAOC,KAAK,MAAM,YAAY;AAC9B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,IAAIC,KAAK,GAAG,CAAC;EACXC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,KAAK;EACZC,SAAS,EAAE,SAAS;EACpBC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,OAAO;EACdC,SAAS,EAAE,MAAM;EACjBC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,MAAM;EACbC,SAAS,EAAE,MAAM;EACjBC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,QAAQ;EACfC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC,CAAC;AACF;AACA,SAASC,UAAUA,CAACC,IAAI,EAAEC,OAAO,EAAE;EACjCD,IAAI,GAAG,CAAC,GAAGA,IAAI,CAAC;EAChB,IAAIE,CAAC,GAAG,CAAC;IAAEC,GAAG,GAAG,EAAE;IAAEC,GAAG,GAAGJ,IAAI,CAACK,MAAM;EACtC,IAAIC,KAAK,GAAGC,WAAW,CAAC,MAAM;IAC5B,IAAIC,IAAI,GAAGR,IAAI,CAACS,KAAK,CAACT,IAAI,CAACE,CAAC,CAAC,CAAC;IAC9BA,CAAC,IAAI,CAAC;IACNC,GAAG,CAACO,IAAI,CAACF,IAAI,CAAC;IACdP,OAAO,CAACU,WAAW,GAAGR,GAAG,CAACS,IAAK,EAAC;IAChC;IACA;IACA;IACA,IAAIT,GAAG,CAACE,MAAM,KAAKD,GAAG,EAAES,aAAa,CAACP,KAAK,CAAC;EAC9C,CAAC,EAAE,EAAE,CAAC;AACR;AACA,SAASQ,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAMC,QAAQ,GAAG7B,MAAM,CAAC,CAAC;EACzB,MAAM8B,QAAQ,GAAG9B,MAAM,CAAC,CAAC;EACzB,MAAM+B,UAAU,GAAG/B,MAAM,CAAC,CAAC;EAC3B,MAAMgC,SAAS,GAAGhC,MAAM,CAAC,CAAC;EAC1B,MAAMiC,UAAU,GAAGjC,MAAM,CAAC,CAAC;EAC3B,MAAMkC,MAAM,GAAGlC,MAAM,CAAC,CAAC;EACvB,MAAMmC,OAAO,GAAGnC,MAAM,CAAC,CAAC;EACxB,MAAMoC,aAAa,GAAGpC,MAAM,CAAC,CAAC;EAC9B,IAAIqC,QAAQ,GAAG,CAAC;EAChB,IAAIC,WAAW,GAAG,GAAG;;EAErB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG1C,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAAC2C,IAAI,EAAEC,OAAO,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAAC6C,UAAU,EAAEC,aAAa,CAAC,GAAG9C,QAAQ,CAACwC,WAAW,CAAC;EACzD,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGhD,QAAQ,CAAC6C,UAAU,GAAG,CAAC,CAAC;EACtE,MAAM,CAAClC,KAAK,EAAEsC,QAAQ,CAAC,GAAGjD,QAAQ,CAACS,KAAK,CAACyC,GAAG,CAAC,CAACC,CAAC,EAAElC,CAAC,KAAKkC,CAAC,CAACxC,KAAK,CAAC,CAAC;EAChE,MAAM,CAACyC,WAAW,EAAEC,cAAc,CAAC,GAAGrD,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACsD,QAAQ,EAAEC,WAAW,CAAC,GAAGvD,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACwD,KAAK,EAAEC,QAAQ,CAAC,GAAGzD,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAAC0D,EAAE,EAAEC,KAAK,CAAC,GAAG3D,QAAQ,CAAC;IAAC4D,UAAU,EAAE,iBAAgB;IAACjD,KAAK,EAAE;EAAmB,CAAC,CAAC;EACvF;EACA;EACAV,SAAS,CAAC,MAAM;IACd,IAAImD,WAAW,EAAE;MAAC;MAChBhB,MAAM,CAACyB,OAAO,CAACnC,WAAW,GAAG,EAAE;MAC/B,CAAC,GAAGK,QAAQ,CAAC8B,OAAO,CAACC,QAAQ,CAAC,CAACC,OAAO,CAACC,CAAC,IAAE;QACxCA,CAAC,CAACC,SAAS,CAACC,MAAM,CAAC,qBAAqB,CAAC;QACzCF,CAAC,CAACC,SAAS,CAACE,GAAG,CAAC,mBAAmB,CAAC;MACtC,CAAC,CAAC;IACJ,CAAC,MACI;MACH,CAAC,GAAGpC,QAAQ,CAAC8B,OAAO,CAACC,QAAQ,CAAC,CAACC,OAAO,CAACC,CAAC,IAAE;QACxCA,CAAC,CAACC,SAAS,CAACC,MAAM,CAAC,mBAAmB,CAAC;QACvCF,CAAC,CAACC,SAAS,CAACE,GAAG,CAAC,qBAAqB,CAAC;MACxC,CAAC,CAAC;MACF/B,MAAM,CAACyB,OAAO,CAACO,KAAK,GAAG,YAAY;MACnCxB,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE0B,WAAW,CAAC,CAAC,CAAC,CAAC;MACjCvD,UAAU,CAAC,4BAA4B,EAAEsB,MAAM,CAACyB,OAAO,CAAC;IAC1D;EACF,CAAC,EAAE,CAACT,WAAW,CAAC,CAAC;EACjBnD,SAAS,CAAC,MAAM;IACd;IACA,IAAKwC,KAAK,GAAG,CAAC,IAAMA,KAAK,GAAG,CAAC,KAAK,CAAE,EAAE;MACpC;MACA;MACAK,aAAa,CAACwB,KAAK,IAAIA,KAAK,GAAG,EAAE,CAAC;MAClCtB,kBAAkB,CAACuB,KAAK,IAAI9B,KAAK,GAAG,CAAC,GAAG8B,KAAK,GAAG,IAAI,GAAG,GAAG,CAAC;IAC7D,CAAC,MACI;MACHzB,aAAa,CAACD,UAAU,CAAC;IAC3B;EACF,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EACXxC,SAAS,CAAC,MAAM;IACd,IAAI,CAACqD,QAAQ,EAAE;MACbvB,QAAQ,CAAC8B,OAAO,CAACI,SAAS,CAACC,MAAM,CAAC,YAAY,CAAC;IACjD,CAAC,MACI;MACHnC,QAAQ,CAAC8B,OAAO,CAACI,SAAS,CAACE,GAAG,CAAC,YAAY,CAAC;IAC9C;EACF,CAAC,EAAE,CAACb,QAAQ,CAAC,CAAC;EACd;EACA;EACA,MAAMe,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIG,MAAM,GAAG7D,KAAK,CAAC8D,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,CAAC,CAAC,GAAG7D,KAAK,CAACS,MAAM,CAAC,CAAC;IAC5D,OAAOoD,MAAM;EACf,CAAC;EACD,MAAMG,SAAS,GAAIC,CAAC,IAAK;IACvBC,eAAe,CAACD,CAAC,CAAC;IAClBE,SAAS,CAAC,CAAC;EACb,CAAC;EACD,MAAMD,eAAe,GAAID,CAAC,IAAK;IAC7BxC,MAAM,CAACyB,OAAO,CAACnC,WAAW,GAAG,EAAE;IAC/B2B,cAAc,CAAC,IAAI,CAAC;IACpBE,WAAW,CAAC,IAAI,CAAC;IACjB,IAAIwB,IAAI,GAAGH,CAAC,CAACI,MAAM;IACnB,IAAIC,cAAc,GAAGhD,UAAU,CAAC4B,OAAO;IACvCkB,IAAI,CAACd,SAAS,CAACE,GAAG,CAAC,UAAU,CAAC;IAC9Bc,cAAc,CAAChB,SAAS,CAACC,MAAM,CAAC,cAAc,CAAC;IAC/Ce,cAAc,CAAChB,SAAS,CAACE,GAAG,CAAC,UAAU,CAAC;EAC1C,CAAC;EACD,MAAMW,SAAS,GAAGA,CAAA,KAAM;IACtBhE,UAAU,CAAC,mBAAmB,EAAEsB,MAAM,CAACyB,OAAO,CAAC;IAC/CjB,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE0B,WAAW,CAAC,CAAC,CAAC,CAAC;IACjC3B,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACnByC,QAAQ,CAACvC,IAAI,CAAC;IACdwC,SAAS,CAAC1C,KAAK,CAAC;EAClB,CAAC;EACD,MAAM0C,SAAS,GAAI1C,KAAK,IAAK;IAC3B2C,UAAU,CAAC,MAAM;MACf7B,WAAW,CAAC,KAAK,CAAC;MAClBzC,UAAU,CAAC,WAAW,EAAEsB,MAAM,CAACyB,OAAO,CAAC;IACzC,CAAC,EAAEpB,KAAK,GAAG,CAAC,GAAI,CAAGA,KAAK,GAAG,CAAC,GAAII,UAAU,GAAG,GAAG,GAAI,CAAC,IAAI,IAAI,GAAI,IAAI,GAAI,CAAGJ,KAAK,GAAG,CAAC,GAAII,UAAU,GAAG,GAAG,GAAI,CAAC,IAAI,IAAK,CAAC;EAC1H,CAAC;EACD,MAAMqC,QAAQ,GAAIG,KAAK,IAAK;IAC1BA,KAAK,CAACtB,OAAO,CAAC,CAACuB,IAAI,EAAErE,CAAC,KAAK;MACzBmE,UAAU,CAAC,MAAM;QACfG,KAAK,CAACD,IAAI,EAAErE,CAAC,CAAC;MAChB,CAAC,EAAE,CAACA,CAAC,GAAG,CAAC,IAAI4B,UAAU,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC;EACD,MAAM0C,KAAK,GAAIC,GAAG,IAAK;IACrB,IAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAc,CAAE,GAAEH,GAAI,EAAC,CAAC;IAC5CC,IAAI,CAACxB,SAAS,CAACC,MAAM,CAAC,mBAAmB,CAAC;IAE1CkB,UAAU,CAAC,MAAM;MACfK,IAAI,CAACxB,SAAS,CAACE,GAAG,CAAC,mBAAmB,CAAC;IACzC,CAAC,EAAEpB,eAAe,CAAC;EACrB,CAAC;EACD,MAAM6C,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIC,GAAG,GAAGvD,aAAa,CAACuB,OAAO;IAC/BtB,QAAQ,IAAE,CAAC;IACX,IAAIuD,IAAI,GAAGJ,QAAQ,CAACK,aAAa,CAAC,MAAM,CAAC;IACzCD,IAAI,CAAC1B,KAAK,GAAE,cAAaV,EAAE,CAACE,UAAW,UAASF,EAAE,CAAC/C,KAAM,EAAC;IAC1DqF,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjB,IAAGvD,QAAQ,GAAC,CAAC,IAAE,CAAC,EAAC;MACfsD,GAAG,CAAC5B,SAAS,CAACE,GAAG,CAAC,cAAc,CAAC;MACjC0B,GAAG,CAAC5B,SAAS,CAACC,MAAM,CAAC,YAAY,CAAC;MAClCP,KAAK,CAAC;QAACC,UAAU,EAAE,iBAAgB;QAACjD,KAAK,EAAE;MAAmB,CAAC,CAAC;IAClE,CAAC,MACG;MACFkF,GAAG,CAAC5B,SAAS,CAACE,GAAG,CAAC,YAAY,CAAC;MAC/B0B,GAAG,CAAC5B,SAAS,CAACC,MAAM,CAAC,cAAc,CAAC;MACpCP,KAAK,CAAC;QAACC,UAAU,EAAE,iBAAgB;QAACjD,KAAK,EAAE;MAAmB,CAAC,CAAC;IAClE;EAEF,CAAC;;EAED;;EAEA,oBACEH,OAAA;IAAK0F,SAAS,EAAC,KAAK;IAAApC,QAAA,gBAClBtD,OAAA;MAAK0F,SAAS,EAAC,kBAAkB;MAACC,OAAO,EAAEP,aAAc;MAAA9B,QAAA,eACvDtD,OAAA;QAAK0F,SAAS,EAAC,mBAAmB;QAAApC,QAAA,eAChCtD,OAAA;UAAME,EAAE,EAAC,QAAQ;UAACwF,SAAS,EAAC,cAAc;UAACE,GAAG,EAAE9D;QAAc;UAAA+D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNhG,OAAA,CAACL,MAAM;MAAOgC,UAAU;MAAEC;IAAM;MAAAiE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtChG,OAAA,CAACH,SAAS;MACRI,KAAK;MAAC;;MAENoC,UAAU;MAAC;MACXC,aAAa;MACbC,eAAe;MACfC,kBAAkB;MAClBR,WAAW;MAEXe,WAAW;MAAC;MACZF,cAAc;MAEd6B,QAAQ;MAAC;MACTJ,SAAS;MACThE,UAAU;MAEViB,QAAQ;MAAC;MACTG,SAAS;MACTE,MAAM;MACNC,OAAO;MACPJ,UAAU;MAEVU,IAAI;MAAC;MACLC,OAAO;MACPY,KAAK;MACLC,QAAQ;MACRhB,KAAK;MACLC;IAAQ;MAAA2D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAELhG,OAAA,CAACJ,QAAQ;MACP4B,QAAQ;MAAC;MACTC,UAAU;MACVI,OAAO;MACPD,MAAM;MAENiC,WAAW;MAAC;MACZM,SAAS;MACT7D,UAAU;MAEV6B,IAAI;MAAC;MACLC,OAAO;MACPS,cAAc;MACdC,QAAQ;MACRC,WAAW;MACXd,KAAK;MACLC,QAAQ;MAERG,UAAU;MAAC;MACXC,aAAa;MACbE,kBAAkB;MAClBR;IAAW;MAAA6D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACLhG,OAAA,CAACF,KAAK;MAAOmC;IAAK;MAAA4D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV;AAAC1E,EAAA,CApMQD,GAAG;AAAA4E,EAAA,GAAH5E,GAAG;AAsMZ,eAAeA,GAAG;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}