{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyles\\\\OneDrive\\\\Desktop\\\\VS Code\\\\simon_updated11.06.23\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport './MediaQuery.css';\nimport { useState, useEffect, useRef } from 'react';\nimport Header from './header.js';\nimport Controls from './controls.js';\nimport Gameboard from './gameboard.js';\n//dataset\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet tiles = [{\n  id: 'red',\n  color: 'red',\n  alternate: 'maroon',\n  sound: null\n}, {\n  id: 'green',\n  color: 'green',\n  alternate: '#029356',\n  sound: null\n}, {\n  id: 'blue',\n  color: 'blue',\n  alternate: '#0073e6',\n  sound: null\n}, {\n  id: 'yellow',\n  color: 'yellow',\n  alternate: '#606ff3',\n  sound: null\n}];\nfunction Level({\n  level\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"level\",\n      children: level\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n}\n_c = Level;\nfunction App() {\n  _s();\n  //HTML References\n  const tilesRef = useRef();\n  const resetRef = useRef();\n  const controlRef = useRef();\n  const myTileRef = useRef();\n  const headingRef = useRef();\n  const subRef = useRef();\n  //Customized functions\n  function autoTextFn(text, heading) {\n    text = text.split``;\n    var i = 0,\n      arr = [];\n    let len = [...text].length;\n    let timer = setInterval(() => {\n      let take = text.shift(text[i]);\n      i++;\n      arr.push(take);\n      heading.textContent = arr.join``;\n      // console.log(text)//sender\n      // console.log(arr)//receiver\n      // console.log(arr.length,len)//compare arr's length w/ original text length\n      if (arr.length === len) clearInterval(timer); //clearInterval once both lengths are the same.\n    }, 35);\n  }\n  function humanDisabled(lvl) {\n    setDisabled(true);\n    setTimeout(() => {\n      setDisabled(false);\n      autoTextFn('Your turn', headingRef.current);\n    }, (lvl + 1) * 1500);\n  }\n  //states\n  const [level, setLevel] = useState(0);\n  const [disabled, setDisabled] = useState(false);\n  const [sequence, setSequence] = useState([]);\n  const [myArr, setMyArr] = useState([]);\n  //useEffects\n  useEffect(() => {\n    let head = headingRef.current.textContent;\n    let tilesArr = [...tilesRef.current.children];\n    if (!disabled || head === 'Your turn') {\n      tilesArr.forEach(tile => {\n        tile.addEventListener('click', e => {\n          let col = e.target.id;\n          handleClick(col);\n        });\n      });\n    }\n    if (disabled || level < 1) {\n      let subText = 'Try to make it to 20 rounds!';\n      autoTextFn('Simon Says', headingRef.current);\n      let time = () => autoTextFn(subText, subRef.current);\n      if (level < 1) {\n        setTimeout(time, 0);\n      } else {\n        clearTimeout(time);\n      }\n      tilesRef.current.classList.add('no-pointer');\n    } else {\n      tilesRef.current.classList.remove('no-pointer');\n    }\n  }, [disabled]);\n  useEffect(() => {\n    setSequence([...sequence, randomColor()]);\n  }, []);\n\n  //____________________________________________\n  //action creators\n  const gameInitialized = e => {\n    subRef.current.textContent = '';\n    tilesRef.current.classList.add('deactivated-ready');\n    tilesRef.current.classList.remove('deactivated-default');\n    let play = e.target;\n    let controlWrapper = controlRef.current;\n    // play.classList.add('disabled')\n    // controlWrapper.classList.toggle('centered')\n  };\n\n  const startGame = e => {\n    setDisabled(true);\n    gameInitialized(e);\n    nextRound();\n  };\n  const randomColor = () => {\n    let arr = [];\n    let random;\n    tiles.forEach(tile => {\n      arr.push(tile.color);\n      random = arr[Math.floor(Math.random() * 4)];\n    });\n    return random;\n  };\n  const activate = t => {\n    var tile = document.getElementById(`${t}`);\n    tile.classList.remove('deactivated-default');\n    setTimeout(() => {\n      tile.classList.add('deactivated-default');\n    }, 300);\n  };\n  const playRound = arr => {\n    arr.forEach((tile, i) => {\n      setTimeout(() => {\n        activate(tile);\n      }, (i + 1) * 1000);\n    });\n  };\n  const handleClick = col => {\n    console.log(col);\n  };\n  const nextRound = () => {\n    setSequence([...sequence, randomColor()]);\n    autoTextFn('Simon\\'s turn', headingRef.current);\n    setLevel(l => l + 1);\n    playRound(sequence);\n    humanDisabled(level);\n    console.log('sequence-1: ' + sequence);\n    console.log('sequence-2: ' + myArr); //uncomment to see how clicking a tile will push it's color into myArr state\n    console.log(sequence);\n    console.log(myArr);\n  };\n\n  //_____________________________________________\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"material-symbols-outlined pc-bg\",\n      children: \"laptop_mac\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      headingRef,\n      subRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Gameboard, {\n      tiles,\n      tilesRef,\n      myTileRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      startGame,\n      resetRef,\n      controlRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Level, {\n      level\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1dWOWUpvSF05Sd5Am1cZbI+SOr0=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Level\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","Header","Controls","Gameboard","jsxDEV","_jsxDEV","tiles","id","color","alternate","sound","Level","level","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","tilesRef","resetRef","controlRef","myTileRef","headingRef","subRef","autoTextFn","text","heading","split","i","arr","len","length","timer","setInterval","take","shift","push","textContent","join","clearInterval","humanDisabled","lvl","setDisabled","setTimeout","current","setLevel","disabled","sequence","setSequence","myArr","setMyArr","head","tilesArr","forEach","tile","addEventListener","e","col","target","handleClick","subText","time","clearTimeout","classList","add","remove","randomColor","gameInitialized","play","controlWrapper","startGame","nextRound","random","Math","floor","activate","t","document","getElementById","playRound","console","log","l","_c2","$RefreshReg$"],"sources":["C:/Users/Kyles/OneDrive/Desktop/VS Code/simon_updated11.06.23/src/App.js"],"sourcesContent":["import './App.css';\nimport './MediaQuery.css';\nimport { useState,useEffect,useRef } from 'react';\nimport Header from './header.js'\nimport Controls from './controls.js';\nimport Gameboard from './gameboard.js'\n//dataset\nlet tiles = [{\n  id:'red',\n  color:'red',\n  alternate:'maroon',\n  sound: null\n},\n{\n  id:'green',\n  color:'green',\n  alternate:'#029356',\n  sound: null\n},\n{\n  id:'blue',\n  color:'blue',\n  alternate:'#0073e6',\n  sound: null\n},\n{\n  id:'yellow',\n  color:'yellow',\n  alternate:'#606ff3',\n  sound: null\n}]\nfunction Level({level}){\nreturn (\n  <div>\n    <h2 className=\"level\">{level}</h2>\n  </div>\n)\n}\n\nfunction App() {\n//HTML References\nconst tilesRef = useRef()\nconst resetRef = useRef()\nconst controlRef = useRef()\nconst myTileRef = useRef()\nconst headingRef = useRef()\nconst subRef = useRef()\n//Customized functions\nfunction autoTextFn(text,heading){\n  text = text.split``\n  var i = 0, arr = []\n    let len = [...text].length\n    let timer = setInterval(()=>{\n      let take = text.shift(text[i])\n       i++\n       arr.push(take)\n      heading.textContent = arr.join``\n      // console.log(text)//sender\n      // console.log(arr)//receiver\n      // console.log(arr.length,len)//compare arr's length w/ original text length\n      if(arr.length === len)clearInterval(timer)//clearInterval once both lengths are the same.\n      },35)\n}\nfunction humanDisabled(lvl){\n  setDisabled(true)\n  setTimeout(()=>{\n    setDisabled(false)\n    autoTextFn('Your turn', headingRef.current)\n  },(lvl+1)*1500)\n}\n//states\nconst [level, setLevel] = useState(0)\nconst [disabled, setDisabled] = useState(false)\nconst [sequence,setSequence] = useState([])\nconst [myArr, setMyArr] = useState([])\n//useEffects\nuseEffect(()=>{\nlet head = headingRef.current.textContent;\nlet tilesArr = [...tilesRef.current.children]\nif(!disabled || head === 'Your turn'){\n  tilesArr.forEach(tile =>{\n    tile.addEventListener('click', e=>{\n      let col = e.target.id\n      handleClick(col)\n    })\n  })\n}\nif(disabled || level  < 1){\n  let subText = 'Try to make it to 20 rounds!'\n  autoTextFn('Simon Says', headingRef.current)\n  let time = () => autoTextFn(subText, subRef.current);\n  if(level < 1){\n    setTimeout(time,0)\n  }\n  else{\n    clearTimeout(time)\n  }\n\n  tilesRef.current.classList.add('no-pointer')\n}\nelse{\n  tilesRef.current.classList.remove('no-pointer')\n}\n},[disabled])\nuseEffect(()=>{\nsetSequence([...sequence,randomColor()])\n},[])\n\n\n//____________________________________________\n//action creators\nconst gameInitialized = (e) => {\n  subRef.current.textContent = ''\n  tilesRef.current.classList.add('deactivated-ready')\n  tilesRef.current.classList.remove('deactivated-default')\n  let play = e.target\n  let controlWrapper = controlRef.current\n  // play.classList.add('disabled')\n  // controlWrapper.classList.toggle('centered')\n}\nconst startGame = (e) => {\n  setDisabled(true)\n  gameInitialized(e)\n  nextRound()\n}\nconst randomColor = () => {\n  let arr = [];\n    let random;\n    tiles.forEach(tile =>{\n      arr.push(tile.color)\n      random = arr[Math.floor(Math.random() * 4)]\n    })\n    return random\n}\nconst activate = (t) => {\n  var tile = document.getElementById(`${t}`)\n  tile.classList.remove('deactivated-default')\n  setTimeout(()=>{\n    tile.classList.add('deactivated-default')\n  },300)\n}\nconst playRound = (arr) => {\n  arr.forEach((tile,i) => {\n    setTimeout(()=>{\n      activate(tile)\n    },(i+1)*1000)\n  })\n}\nconst handleClick = (col) => {\nconsole.log(col)\n}\nconst nextRound = () => {\nsetSequence([...sequence,randomColor()])\nautoTextFn('Simon\\'s turn', headingRef.current)\nsetLevel(l => l + 1)\nplayRound(sequence)\nhumanDisabled(level)\nconsole.log('sequence-1: '+sequence)\nconsole.log('sequence-2: '+myArr) //uncomment to see how clicking a tile will push it's color into myArr state\nconsole.log(sequence)\nconsole.log(myArr)\n}\n\n\n//_____________________________________________\n\nreturn (\n    <div className=\"App\">\n      <span className=\"material-symbols-outlined pc-bg\">laptop_mac</span>\n      <Header {...{headingRef,subRef}}/>\n      <Gameboard {...{tiles,tilesRef,myTileRef}}/>\n      <Controls {...{startGame,resetRef,controlRef}}/>\n      <Level {...{level}}/>\n    </div>\n  );\n}\n\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}