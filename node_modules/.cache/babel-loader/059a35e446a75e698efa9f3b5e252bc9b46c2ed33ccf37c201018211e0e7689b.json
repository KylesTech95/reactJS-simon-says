{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyles\\\\OneDrive\\\\Desktop\\\\VS Code\\\\simon_updated11.06.23\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport './MediaQuery.css';\nimport { useState, useEffect, useRef } from 'react';\nimport Header from './header.js';\nimport Controls from './controls.js';\nimport Gameboard from './gameboard.js';\nimport Level from './level.js';\n//dataset\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet tiles = [{\n  id: 1,\n  color: 'red',\n  alternate: 'hotpink',\n  sound: './sounds/beep-04.mp3'\n}, {\n  id: 2,\n  color: 'green',\n  alternate: 'lime',\n  sound: './sounds/beep-05.mp3'\n}, {\n  id: 3,\n  color: 'blue',\n  alternate: 'cyan',\n  sound: './sounds/beep-08b.mp3'\n}, {\n  id: 4,\n  color: 'yellow',\n  alternate: 'tan',\n  sound: './sounds/beep-09.mp3'\n}];\n//Customized functions\nfunction autoTextFn(text, heading) {\n  text = [...text]; //text.split``\n  let i = 0,\n    arr = [],\n    len = text.length;\n  let timer = setInterval(() => {\n    let take = text.shift(text[i]);\n    i += 1;\n    arr.push(take);\n    heading.textContent = arr.join``;\n    // console.log(text)//sender\n    // console.log(arr)//receiver\n    // console.log(arr.length,len)//compare arr's length w/ original text length\n    if (arr.length === len) clearInterval(timer); //clearInterval once both lengths are the same.\n  }, 35);\n}\nfunction App() {\n  _s();\n  //HTML References\n  const tilesRef = useRef();\n  const resetRef = useRef();\n  const controlRef = useRef();\n  const myTileRef = useRef();\n  const headingRef = useRef();\n  const subRef = useRef();\n  const playRef = useRef();\n  let start_count = 750;\n\n  //states\n  const [level, setLevel] = useState(0);\n  const [disabled, setDisabled] = useState(false);\n  const [color, setColor] = useState(tiles.map((_, i) => _.color));\n  const [gameStarted, setGameStarted] = useState(false);\n  const [comp, setComp] = useState([]);\n  const [comp_speed, setComp_speed] = useState(start_count);\n  const [comp_tile_delay, setComp_tile_delay] = useState(comp_speed / 2);\n  const [index, setIndex] = useState(0);\n\n  //useEffects\n  useEffect(() => {\n    //Modify computer_speed\n    if (level > 0 && level % 3 === 0) {\n      //computer_speed increases my 150ms every 4 rounds.\n      //computer's tap delay = If level < 9 return (computer speed / 2), else 225 (minimum delay speed)\n      setComp_speed(count => count - 75);\n      setComp_tile_delay(delay => level < 9 ? delay - 37.5 : 225);\n    } else {\n      setComp_speed(comp_speed);\n    }\n  }, [level]);\n  useEffect(() => {\n    if (!disabled) {\n      tilesRef.current.classList.remove('no-pointer');\n    } else {\n      tilesRef.current.classList.add('no-pointer');\n    }\n  }, [disabled, level]);\n\n  //____________________________________________\n  //action creators\n  const startGame = e => {\n    gameInitialized(e);\n    playRound();\n  };\n  const gameInitialized = e => {\n    subRef.current.textContent = '';\n    setGameStarted(true);\n    setDisabled(true);\n    let play = e.target;\n    let controlWrapper = controlRef.current;\n    play.classList.add('disabled');\n    controlWrapper.classList.remove('space-evenly');\n    controlWrapper.classList.add('centered');\n  };\n  const playRound = () => {\n    autoTextFn('Wait for Computer', subRef.current);\n    setComp([...comp, randomColor()]);\n    setLevel(level + 1);\n    activate(comp);\n    humanTurn(level);\n  };\n  const humanTurn = level => {\n    setTimeout(() => {\n      setDisabled(false);\n      autoTextFn('Your turn', subRef.current);\n    }, level > 1 ? (level % 8 / comp_speed * 100 + 2) * 1000 + 1500 : (level % 8 / comp_speed * 100 + 2) * 1000);\n  };\n  const activate = array => {\n    array.forEach((tile, i) => {\n      setTimeout(() => {\n        blink(tile, i);\n      }, (i + 1) * comp_speed);\n    });\n  };\n  const blink = col => {\n    let elem = document.getElementById(`${col}`);\n    elem.classList.remove('deactivated-ready');\n    setTimeout(() => {\n      elem.classList.add('deactivated-ready');\n    }, comp_tile_delay);\n  };\n  const randomColor = () => {\n    let random = color[Math.floor(Math.random() * color.length)];\n    return random;\n  };\n\n  //_____________________________________________\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      headingRef,\n      subRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Gameboard, {\n      comp_tile_delay,\n      tiles,\n      activate,\n      start_count,\n      comp_speed,\n      setComp_speed,\n      setComp_tile_delay,\n      tilesRef,\n      myTileRef,\n      comp,\n      setComp,\n      index,\n      setIndex,\n      level,\n      playRound,\n      level,\n      subRef,\n      autoTextFn,\n      setGameStarted,\n      setLevel,\n      playRef,\n      controlRef,\n      setDisabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      disabled,\n      randomColor,\n      startGame,\n      resetRef,\n      controlRef,\n      playRef,\n      subRef,\n      autoTextFn,\n      level,\n      setDisabled,\n      setGameStarted,\n      setComp,\n      setComp_tile_delay,\n      setLevel,\n      comp_speed,\n      start_count,\n      setComp_speed,\n      comp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Level, {\n      level\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sWSeykLFp8xFkho2Xkli+lPsgJc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","Header","Controls","Gameboard","Level","jsxDEV","_jsxDEV","tiles","id","color","alternate","sound","autoTextFn","text","heading","i","arr","len","length","timer","setInterval","take","shift","push","textContent","join","clearInterval","App","_s","tilesRef","resetRef","controlRef","myTileRef","headingRef","subRef","playRef","start_count","level","setLevel","disabled","setDisabled","setColor","map","_","gameStarted","setGameStarted","comp","setComp","comp_speed","setComp_speed","comp_tile_delay","setComp_tile_delay","index","setIndex","count","delay","current","classList","remove","add","startGame","e","gameInitialized","playRound","play","target","controlWrapper","randomColor","activate","humanTurn","setTimeout","array","forEach","tile","blink","col","elem","document","getElementById","random","Math","floor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kyles/OneDrive/Desktop/VS Code/simon_updated11.06.23/src/App.js"],"sourcesContent":["import './App.css';\nimport './MediaQuery.css';\nimport { useState, useEffect, useRef } from 'react';\nimport Header from './header.js'\nimport Controls from './controls.js';\nimport Gameboard from './gameboard.js';\nimport Level from './level.js'\n//dataset\nlet tiles = [{\n  id: 1,\n  color: 'red',\n  alternate: 'hotpink',\n  sound: './sounds/beep-04.mp3'\n},\n{\n  id: 2,\n  color: 'green',\n  alternate: 'lime',\n  sound: './sounds/beep-05.mp3'\n},\n{\n  id: 3,\n  color: 'blue',\n  alternate: 'cyan',\n  sound: './sounds/beep-08b.mp3'\n},\n{\n  id: 4,\n  color: 'yellow',\n  alternate: 'tan',\n  sound: './sounds/beep-09.mp3'\n}]\n//Customized functions\nfunction autoTextFn(text, heading) {\n  text = [...text]//text.split``\n  let i = 0, arr = [], len = text.length\n  let timer = setInterval(() => {\n    let take = text.shift(text[i])\n    i += 1\n    arr.push(take)\n    heading.textContent = arr.join``\n    // console.log(text)//sender\n    // console.log(arr)//receiver\n    // console.log(arr.length,len)//compare arr's length w/ original text length\n    if (arr.length === len) clearInterval(timer)//clearInterval once both lengths are the same.\n  }, 35)\n}\nfunction App() {\n  //HTML References\n  const tilesRef = useRef()\n  const resetRef = useRef()\n  const controlRef = useRef()\n  const myTileRef = useRef()\n  const headingRef = useRef()\n  const subRef = useRef()\n  const playRef = useRef()\n  let start_count = 750\n\n  //states\n  const [level, setLevel] = useState(0)\n  const [disabled, setDisabled] = useState(false)\n  const [color, setColor] = useState(tiles.map((_, i) => _.color))\n  const [gameStarted, setGameStarted] = useState(false)\n  const [comp, setComp] = useState([])\n  const [comp_speed, setComp_speed] = useState(start_count)\n  const [comp_tile_delay, setComp_tile_delay] = useState(comp_speed / 2)\n  const [index, setIndex] = useState(0)\n\n  //useEffects\n  useEffect(() => {\n    //Modify computer_speed\n    if ((level > 0) && (level % 3 === 0)) {\n      //computer_speed increases my 150ms every 4 rounds.\n      //computer's tap delay = If level < 9 return (computer speed / 2), else 225 (minimum delay speed)\n      setComp_speed(count => count - 75)\n      setComp_tile_delay(delay => level < 9 ? delay - 37.5 : 225)\n    }\n    else {\n      setComp_speed(comp_speed)\n    }\n  }, [level])\n  \n  useEffect(() => {\n    if (!disabled) {\n      tilesRef.current.classList.remove('no-pointer')\n    }\n    else {\n      tilesRef.current.classList.add('no-pointer')\n    }\n  }, [disabled, level])\n\n  //____________________________________________\n  //action creators\n  const startGame = (e) => {\n    gameInitialized(e)\n    playRound()\n  }\n  const gameInitialized = (e) => {\n    subRef.current.textContent = ''\n    setGameStarted(true)\n    setDisabled(true)\n    let play = e.target\n    let controlWrapper = controlRef.current\n    play.classList.add('disabled')\n    controlWrapper.classList.remove('space-evenly')\n    controlWrapper.classList.add('centered')\n  }\n  const playRound = () => {\n    autoTextFn('Wait for Computer', subRef.current)\n    setComp([...comp, randomColor()])\n    setLevel(level + 1)\n    activate(comp)\n    humanTurn(level)\n  }\n  const humanTurn = (level) => {\n    setTimeout(() => {\n      setDisabled(false)\n      autoTextFn('Your turn', subRef.current)\n    }, level > 1 ? ((((level % 8) / comp_speed * 100) + 2) * 1000) + 1500 : ((((level % 8) / comp_speed * 100) + 2) * 1000))\n  }\n  const activate = (array) => {\n    array.forEach((tile, i) => {\n      setTimeout(() => {\n        blink(tile, i)\n      }, (i + 1) * comp_speed)\n    })\n  }\n  const blink = (col) => {\n    let elem = document.getElementById(`${col}`)\n    elem.classList.remove('deactivated-ready')\n\n    setTimeout(() => {\n      elem.classList.add('deactivated-ready')\n\n    }, comp_tile_delay)\n  }\n  const randomColor = () => {\n    let random = color[Math.floor(Math.random() * color.length)]\n    return random\n  }\n\n  //_____________________________________________\n\n  return (\n    <div className=\"App\">\n      <Header {...{ headingRef, subRef }} />\n      <Gameboard {...{\n        comp_tile_delay,\n        tiles,\n        activate,\n        start_count,\n        comp_speed,\n        setComp_speed,\n        setComp_tile_delay,\n        tilesRef,\n        myTileRef,\n        comp,\n        setComp,\n        index,\n        setIndex,\n        level,\n        playRound,\n        level,\n        subRef,\n        autoTextFn,\n        setGameStarted,\n        setLevel,\n        playRef,\n        controlRef,\n        setDisabled\n      }} />\n      <Controls {...{\n        disabled,\n        randomColor,\n        startGame,\n        resetRef,\n        controlRef,\n        playRef,\n        subRef,\n        autoTextFn,\n        level,\n        setDisabled,\n        setGameStarted,\n        setComp,\n        setComp_tile_delay,\n        setLevel,\n        comp_speed,\n        start_count,\n        setComp_speed,\n        comp\n      }} />\n      <Level {...{ level }} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}