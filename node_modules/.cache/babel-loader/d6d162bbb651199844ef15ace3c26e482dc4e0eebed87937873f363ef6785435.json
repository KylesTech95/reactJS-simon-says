{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyles\\\\OneDrive\\\\Desktop\\\\VS Code\\\\simon_updated11.06.23\\\\src\\\\gameboard.js\";\nimport './App.css';\n// import { useState, useEffect, useRef } from 'react';\nimport { useEffect, React } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet arr = [];\nexport default function Gameboard({\n  tiles,\n  tilesRef,\n  myTileRef,\n  comp,\n  setComp,\n  index,\n  setIndex,\n  playRound,\n  level,\n  human,\n  subRef,\n  autoTextFn,\n  setGameStarted\n}) {\n  function clickFn(e) {\n    arr.push(e.target.id);\n    setIndex(index + 1);\n    console.log(index);\n    console.log(arr[index]);\n    console.log(comp[index]);\n    if (arr[index] !== comp[index]) {\n      gameOver('game over');\n    }\n    if (arr[index] === comp[index] && arr.length === comp.length - 1) {\n      arr = [];\n      setIndex(0);\n      playRound();\n    }\n  }\n  function gameOver(txt) {\n    setGameStarted(false);\n    autoTextFn(txt, subRef.current);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"gameboard-container\",\n      ref: tilesRef,\n      children: tiles.map(tile => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tile deactivated-default\",\n        onClick: clickFn,\n        id: tile.color,\n        ref: myTileRef,\n        style: {\n          backgroundColor: `${tile.color}`\n        }\n      }, tile.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Gameboard;\nvar _c;\n$RefreshReg$(_c, \"Gameboard\");","map":{"version":3,"names":["useEffect","React","jsxDEV","_jsxDEV","Fragment","_Fragment","arr","Gameboard","tiles","tilesRef","myTileRef","comp","setComp","index","setIndex","playRound","level","human","subRef","autoTextFn","setGameStarted","clickFn","e","push","target","id","console","log","gameOver","length","txt","current","children","ref","map","tile","className","onClick","color","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kyles/OneDrive/Desktop/VS Code/simon_updated11.06.23/src/gameboard.js"],"sourcesContent":["import './App.css'\r\n// import { useState, useEffect, useRef } from 'react';\r\nimport { useEffect,React } from 'react'\r\n\r\nlet arr = []\r\nexport default function Gameboard({tiles,tilesRef, myTileRef,comp,setComp,index,setIndex,playRound,level,human,subRef,autoTextFn,setGameStarted}) {\r\n  function clickFn(e){\r\n    arr.push(e.target.id)\r\n    setIndex(index+1)\r\n    console.log(index)\r\n    console.log(arr[index])\r\n    console.log(comp[index])\r\n\r\n    if(arr[index]!==comp[index]){\r\n      gameOver('game over')\r\n    }\r\n    if(arr[index]===comp[index] && arr.length===comp.length-1){\r\n      arr=[]\r\n      setIndex(0)\r\n      playRound()\r\n      }\r\n    }\r\n  function gameOver(txt){\r\n    setGameStarted(false)\r\n    autoTextFn(txt,subRef.current)\r\n    \r\n  }\r\n  return (\r\n    <>\r\n      <div id=\"gameboard-container\" ref={tilesRef}>\r\n        {tiles.map((tile)=>(\r\n          <div className=\"tile deactivated-default\" onClick={clickFn} key={tile.id} id={tile.color} ref={myTileRef} style={{backgroundColor:`${tile.color}`}}>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAO,WAAW;AAClB;AACA,SAASA,SAAS,EAACC,KAAK,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,IAAIC,GAAG,GAAG,EAAE;AACZ,eAAe,SAASC,SAASA,CAAC;EAACC,KAAK;EAACC,QAAQ;EAAEC,SAAS;EAACC,IAAI;EAACC,OAAO;EAACC,KAAK;EAACC,QAAQ;EAACC,SAAS;EAACC,KAAK;EAACC,KAAK;EAACC,MAAM;EAACC,UAAU;EAACC;AAAc,CAAC,EAAE;EAChJ,SAASC,OAAOA,CAACC,CAAC,EAAC;IACjBhB,GAAG,CAACiB,IAAI,CAACD,CAAC,CAACE,MAAM,CAACC,EAAE,CAAC;IACrBX,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAC;IACjBa,OAAO,CAACC,GAAG,CAACd,KAAK,CAAC;IAClBa,OAAO,CAACC,GAAG,CAACrB,GAAG,CAACO,KAAK,CAAC,CAAC;IACvBa,OAAO,CAACC,GAAG,CAAChB,IAAI,CAACE,KAAK,CAAC,CAAC;IAExB,IAAGP,GAAG,CAACO,KAAK,CAAC,KAAGF,IAAI,CAACE,KAAK,CAAC,EAAC;MAC1Be,QAAQ,CAAC,WAAW,CAAC;IACvB;IACA,IAAGtB,GAAG,CAACO,KAAK,CAAC,KAAGF,IAAI,CAACE,KAAK,CAAC,IAAIP,GAAG,CAACuB,MAAM,KAAGlB,IAAI,CAACkB,MAAM,GAAC,CAAC,EAAC;MACxDvB,GAAG,GAAC,EAAE;MACNQ,QAAQ,CAAC,CAAC,CAAC;MACXC,SAAS,CAAC,CAAC;IACX;EACF;EACF,SAASa,QAAQA,CAACE,GAAG,EAAC;IACpBV,cAAc,CAAC,KAAK,CAAC;IACrBD,UAAU,CAACW,GAAG,EAACZ,MAAM,CAACa,OAAO,CAAC;EAEhC;EACA,oBACE5B,OAAA,CAAAE,SAAA;IAAA2B,QAAA,eACE7B,OAAA;MAAKsB,EAAE,EAAC,qBAAqB;MAACQ,GAAG,EAAExB,QAAS;MAAAuB,QAAA,EACzCxB,KAAK,CAAC0B,GAAG,CAAEC,IAAI,iBACdhC,OAAA;QAAKiC,SAAS,EAAC,0BAA0B;QAACC,OAAO,EAAEhB,OAAQ;QAAeI,EAAE,EAAEU,IAAI,CAACG,KAAM;QAACL,GAAG,EAAEvB,SAAU;QAAC6B,KAAK,EAAE;UAACC,eAAe,EAAE,GAAEL,IAAI,CAACG,KAAM;QAAC;MAAE,GAAlFH,IAAI,CAACV,EAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBACN,CAAC;AAEP;AAACC,EAAA,GAhCuBtC,SAAS;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}