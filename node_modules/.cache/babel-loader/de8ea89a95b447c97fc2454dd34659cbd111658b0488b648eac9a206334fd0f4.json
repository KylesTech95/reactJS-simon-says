{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyles\\\\OneDrive\\\\Desktop\\\\VS Code\\\\simon_updated11.06.23\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport './MediaQuery.css';\nimport { useState, useEffect, useRef } from 'react';\nimport Header from './header.js';\nimport Controls from './controls.js';\nimport Gameboard from './gameboard.js';\n//dataset\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet tiles = [{\n  id: 1,\n  color: 'red',\n  alternate: 'maroon',\n  sound: null\n}, {\n  id: 2,\n  color: 'green',\n  alternate: '#029356',\n  sound: null\n}, {\n  id: 3,\n  color: 'blue',\n  alternate: '#0073e6',\n  sound: null\n}, {\n  id: 4,\n  color: 'yellow',\n  alternate: '#606ff3',\n  sound: null\n}];\nfunction Level({\n  level\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"level\",\n      children: level\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = Level;\nfunction App() {\n  _s();\n  //HTML References\n  const tilesRef = useRef();\n  const resetRef = useRef();\n  const controlRef = useRef();\n  const myTileRef = useRef();\n  const headingRef = useRef();\n  const subRef = useRef();\n  const playRef = useRef();\n  let start_count = 750;\n  let human = [];\n  let idx = [];\n\n  //Customized functions\n  function autoTextFn(text, heading) {\n    text = text.split``;\n    var i = 0,\n      arr = [];\n    let len = [...text].length;\n    let timer = setInterval(() => {\n      let take = text.shift(text[i]);\n      i++;\n      arr.push(take);\n      heading.textContent = arr.join``;\n      // console.log(text)//sender\n      // console.log(arr)//receiver\n      // console.log(arr.length,len)//compare arr's length w/ original text length\n      if (arr.length === len) clearInterval(timer); //clearInterval once both lengths are the same.\n    }, 35);\n  }\n\n  //states\n  const [level, setLevel] = useState(0);\n  const [disabled, setDisabled] = useState(false);\n  const [color, setColor] = useState(tiles.map((_, i) => _.color));\n  const [gameStarted, setGameStarted] = useState(false);\n  const [comp, setComp] = useState([]);\n  const [comp_speed, setComp_speed] = useState(start_count);\n  const [comp_tile_delay, setComp_tile_delay] = useState(comp_speed / 2);\n\n  //useEffects\n  useEffect(() => {\n    //Modify computer_speed\n    if (level < 1) {\n      setComp([...comp, randomColor()]);\n      autoTextFn('Simon Says', headingRef.current);\n      autoTextFn('Try to beat all 20 rounds!', subRef.current);\n      setDisabled(true);\n    }\n    if (level > 0 && level % 3 == 0) {\n      //computer_speed increases my 150ms every 4 rounds.\n      //computer's tap delay = If level < 9 return (computer speed / 2), else 225 (minimum delay speed)\n      setComp_speed(count => count - 150);\n      setComp_tile_delay(delay => level < 9 ? delay - 75 : 225);\n    } else {\n      setComp_speed(comp_speed);\n    }\n  }, [level]);\n  useEffect(() => {\n    if (gameStarted) {\n      //Once the game starts, the tiles look darker.\n      subRef.current.textContent = '';\n      tilesRef.current.classList.toggle('deactivated-ready');\n      setDisabled(true);\n    }\n  }, [gameStarted]);\n  useEffect(() => {\n    if (!disabled && level >= 1) {\n      tilesRef.current.classList.remove('no-pointer');\n      tilesRef.current.addEventListener('click', e => {\n        let i = idx.push(e.target.id) - 1;\n        human.push(e.target.id);\n        console.log(human[i]);\n        console.log(comp[i]);\n        if (comp.length - 1 === human.length) {\n          console.log('LENGTH PASSES');\n        }\n      });\n    }\n    if (disabled) {\n      tilesRef.current.classList.add('no-pointer');\n    }\n  }, [disabled, level]);\n\n  //____________________________________________\n  //action creators\n  const gameInitialized = e => {\n    setGameStarted(true);\n    let play = e.target;\n    let controlWrapper = controlRef.current;\n    // play.classList.add('disabled')\n    // controlWrapper.classList.toggle('centered')\n  };\n\n  const startGame = e => {\n    gameInitialized(e);\n    playRound();\n  };\n  const playRound = () => {\n    //computer turn & human turn\n    setDisabled(level > 0 ? true : disabled); //If level > 0, set disabled to true, or else useEffect(()=>,[gameStarted])\n    autoTextFn('Wait for Computer', subRef.current);\n    setComp([...comp, randomColor()]);\n    setLevel(level + 1);\n    activate(comp);\n    humanTurn(level);\n  };\n  const humanTurn = level => {\n    setTimeout(() => {\n      setDisabled(false);\n      autoTextFn('Your turn', subRef.current);\n    }, level > 1 ? level + 2 * 1000 + 1500 : level + 2 * 1000);\n  };\n  const activate = array => {\n    array.forEach((tile, i) => {\n      setTimeout(() => {\n        blink(tile);\n      }, (i + 1) * comp_speed);\n    });\n  };\n  const blink = col => {\n    let elem = document.querySelector(`#${col}`);\n    elem.classList.remove('deactivated-ready');\n    elem.classList.remove('deactivated-default');\n    setTimeout(() => {\n      elem.classList.add('deactivated-ready');\n      elem.classList.add('deactivated-default');\n      elem.classList.toggle('deactivated-ready');\n    }, comp_tile_delay);\n  };\n  const randomColor = () => {\n    let random = color[Math.floor(Math.random() * color.length)];\n    return random;\n  };\n\n  //_____________________________________________\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"material-symbols-outlined pc-bg\",\n      children: \"laptop_mac\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      headingRef,\n      subRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Gameboard, {\n      tiles,\n      tilesRef,\n      myTileRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      startGame,\n      resetRef,\n      controlRef,\n      playRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Level, {\n      level\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"o+JjDVRu1kXMrBrE7yIVRDGwIbc=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Level\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","Header","Controls","Gameboard","jsxDEV","_jsxDEV","tiles","id","color","alternate","sound","Level","level","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","tilesRef","resetRef","controlRef","myTileRef","headingRef","subRef","playRef","start_count","human","idx","autoTextFn","text","heading","split","i","arr","len","length","timer","setInterval","take","shift","push","textContent","join","clearInterval","setLevel","disabled","setDisabled","setColor","map","_","gameStarted","setGameStarted","comp","setComp","comp_speed","setComp_speed","comp_tile_delay","setComp_tile_delay","randomColor","current","count","delay","classList","toggle","remove","addEventListener","e","target","console","log","add","gameInitialized","play","controlWrapper","startGame","playRound","activate","humanTurn","setTimeout","array","forEach","tile","blink","col","elem","document","querySelector","random","Math","floor","_c2","$RefreshReg$"],"sources":["C:/Users/Kyles/OneDrive/Desktop/VS Code/simon_updated11.06.23/src/App.js"],"sourcesContent":["import './App.css';\nimport './MediaQuery.css';\nimport { useState, useEffect, useRef } from 'react';\nimport Header from './header.js'\nimport Controls from './controls.js';\nimport Gameboard from './gameboard.js'\n//dataset\nlet tiles = [{\n  id: 1,\n  color: 'red',\n  alternate: 'maroon',\n  sound: null\n},\n{\n  id: 2,\n  color: 'green',\n  alternate: '#029356',\n  sound: null\n},\n{\n  id: 3,\n  color: 'blue',\n  alternate: '#0073e6',\n  sound: null\n},\n{\n  id: 4,\n  color: 'yellow',\n  alternate: '#606ff3',\n  sound: null\n}]\nfunction Level({ level }) {\n  return (\n    <div>\n      <h2 className=\"level\">{level}</h2>\n    </div>\n  )\n}\nfunction App() {\n  //HTML References\n  const tilesRef = useRef()\n  const resetRef = useRef()\n  const controlRef = useRef()\n  const myTileRef = useRef()\n  const headingRef = useRef()\n  const subRef = useRef()\n  const playRef = useRef()\n  let start_count = 750\n  let human = []\n  let idx = []\n\n\n  //Customized functions\n  function autoTextFn(text, heading) {\n    text = text.split``\n    var i = 0, arr = []\n    let len = [...text].length\n    let timer = setInterval(() => {\n      let take = text.shift(text[i])\n      i++\n      arr.push(take)\n      heading.textContent = arr.join``\n      // console.log(text)//sender\n      // console.log(arr)//receiver\n      // console.log(arr.length,len)//compare arr's length w/ original text length\n      if (arr.length === len) clearInterval(timer)//clearInterval once both lengths are the same.\n    }, 35)\n  }\n\n  //states\n  const [level, setLevel] = useState(0)\n  const [disabled, setDisabled] = useState(false)\n  const [color, setColor] = useState(tiles.map((_,i)=>_.color))\n  const [gameStarted, setGameStarted] = useState(false)\n  const [comp, setComp] = useState([])\n  const [comp_speed, setComp_speed] = useState(start_count)\n  const [comp_tile_delay, setComp_tile_delay] = useState(comp_speed/2)\n\n\n\n  //useEffects\n  useEffect(()=>{//Modify computer_speed\n    if(level < 1){\n      setComp([...comp,randomColor()])\n      autoTextFn('Simon Says', headingRef.current)\n      autoTextFn('Try to beat all 20 rounds!',subRef.current)\n      setDisabled(true)\n    }\n    if(level>0&&level%3==0){\n      //computer_speed increases my 150ms every 4 rounds.\n      //computer's tap delay = If level < 9 return (computer speed / 2), else 225 (minimum delay speed)\n      setComp_speed(count => count - 150)\n      setComp_tile_delay(delay => level < 9 ? delay - 75 : 225)\n    }\n    else{\n      setComp_speed(comp_speed)    \n    }\n  },[level])\n  useEffect(()=>{ \n  if(gameStarted){//Once the game starts, the tiles look darker.\n    subRef.current.textContent = ''\n    tilesRef.current.classList.toggle('deactivated-ready')\n    setDisabled(true)\n    }\n  },[gameStarted])\n  useEffect(() => {\n   if(!disabled&&level>=1){\n      tilesRef.current.classList.remove('no-pointer')\n      tilesRef.current.addEventListener('click',e=>{\n        let i = idx.push(e.target.id)-1 \n        human.push(e.target.id)\n        console.log(human[i])\n        console.log(comp[i])\n        if((comp.length-1)===human.length){\n          console.log('LENGTH PASSES')\n        }\n      })\n    }\n    if (disabled) {\n      tilesRef.current.classList.add('no-pointer')\n    } \n  }, [disabled,level])\n \n  \n\n  //____________________________________________\n  //action creators\n  const gameInitialized = (e) => {\n    setGameStarted(true)\n    let play = e.target\n    let controlWrapper = controlRef.current\n    // play.classList.add('disabled')\n    // controlWrapper.classList.toggle('centered')\n  }\n  \n  const startGame = (e) => {\n    gameInitialized(e)\n    playRound()\n  }\n  const playRound = () => {\n    //computer turn & human turn\n    setDisabled(level > 0 ? true : disabled)//If level > 0, set disabled to true, or else useEffect(()=>,[gameStarted])\n    autoTextFn('Wait for Computer',subRef.current)\n    setComp([...comp, randomColor()])\n    setLevel(level + 1)\n    activate(comp)\n    humanTurn(level)\n  }\n  const humanTurn = (level) =>{\n    setTimeout(()=>{\n    setDisabled(false)\n    autoTextFn('Your turn',subRef.current)\n\n    },level > 1 ? (level+2*1000)+1500 : (level+2*1000))\n  }\n  const activate = (array) =>{\n    array.forEach((tile,i) =>{\n        setTimeout(()=>{\n          blink(tile)\n        },(i+1)*comp_speed)\n    })\n  }\n  const blink = (col) =>{\n    let elem = document.querySelector(`#${col}`)\n    elem.classList.remove('deactivated-ready')\n    elem.classList.remove('deactivated-default')\n    setTimeout(()=>{\n      elem.classList.add('deactivated-ready')\n      elem.classList.add('deactivated-default')\n      elem.classList.toggle('deactivated-ready')\n    },comp_tile_delay)\n  } \n  const randomColor = () => {\n   let random =  color[Math.floor(Math.random()*color.length)]\n   return random\n  }\n\n  \n\n\n  //_____________________________________________\n\n  return (\n    <div className=\"App\">\n      <span className=\"material-symbols-outlined pc-bg\">laptop_mac</span>\n      <Header {...{ headingRef, subRef }} />\n      <Gameboard {...{ tiles, tilesRef, myTileRef }} />\n      <Controls {...{ startGame, resetRef, controlRef,playRef }} />\n      <Level {...{ level }} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}